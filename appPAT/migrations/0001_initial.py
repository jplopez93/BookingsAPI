# Generated by Django 3.2.7 on 2021-10-11 13:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id_passenger', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('document', models.CharField(max_length=20, unique=True, verbose_name='Document')),
                ('email', models.EmailField(max_length=70, unique=True, verbose_name='Email')),
                ('password', models.CharField(max_length=256, verbose_name='Password')),
                ('birth_date', models.DateTimeField(null=True, verbose_name='Birth Date')),
                ('cellphone', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('gender', models.CharField(choices=[('F', 'Femenino'), ('M', 'Masculino')], default='F', max_length=1, verbose_name='Gender')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Passenger',
                'verbose_name_plural': 'Passengers',
                'db_table': 'passenger',
                'ordering': ['id_passenger'],
            },
        ),
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('id_airport', models.AutoField(primary_key=True, serialize=False)),
                ('cod', models.CharField(max_length=3, verbose_name='COD')),
                ('name_airport', models.CharField(max_length=50, unique=True, verbose_name='Name Airport')),
                ('city', models.CharField(max_length=30, verbose_name='City')),
                ('country', models.CharField(max_length=30, verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Airport',
                'verbose_name_plural': 'Airports',
                'db_table': 'airports',
                'ordering': ['id_airport'],
            },
        ),
        migrations.CreateModel(
            name='Plane',
            fields=[
                ('id_plane', models.AutoField(primary_key=True, serialize=False)),
                ('plane_reference', models.CharField(max_length=45, verbose_name='Plane Reference')),
                ('capacity', models.IntegerField(default=0, verbose_name='Capacity')),
            ],
            options={
                'verbose_name': 'plane',
                'verbose_name_plural': 'planes',
                'db_table': 'planes',
                'ordering': ['id_plane'],
            },
        ),
        migrations.CreateModel(
            name='RouteType',
            fields=[
                ('id_route_type', models.IntegerField(primary_key=True, serialize=False)),
                ('name_route_type', models.CharField(max_length=20, unique=True, verbose_name='Route Type')),
            ],
            options={
                'verbose_name': 'Route_type',
                'verbose_name_plural': 'Route_types',
                'db_table': 'routetypes',
                'ordering': ['id_route_type'],
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id_route', models.IntegerField(primary_key=True, serialize=False)),
                ('from_airport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_airport', to='appPAT.airport', verbose_name='From')),
                ('id_route_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPAT.routetype')),
                ('to_airport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_airport', to='appPAT.airport', verbose_name='To')),
            ],
            options={
                'verbose_name': 'Route',
                'verbose_name_plural': 'Routes',
                'db_table': 'routes',
                'ordering': ['id_route'],
            },
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id_flight', models.AutoField(primary_key=True, serialize=False)),
                ('departure', models.DateTimeField(verbose_name='Departure')),
                ('arrival', models.DateTimeField(verbose_name='Arrival')),
                ('id_plane', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPAT.plane')),
                ('id_route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPAT.route')),
            ],
            options={
                'verbose_name': 'Flight',
                'verbose_name_plural': 'Flights',
                'db_table': 'flights',
                'ordering': ['id_flight'],
            },
        ),
        migrations.CreateModel(
            name='Fare',
            fields=[
                ('id_fare', models.AutoField(primary_key=True, serialize=False)),
                ('fare', models.IntegerField(verbose_name='Fare')),
                ('category', models.CharField(max_length=10, verbose_name='Category')),
                ('id_route_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPAT.routetype')),
            ],
            options={
                'verbose_name': 'Fare',
                'verbose_name_plural': 'Fares',
                'db_table': 'fares',
                'ordering': ['id_fare'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id_booking', models.AutoField(primary_key=True, serialize=False)),
                ('pnr', models.CharField(max_length=6, verbose_name='PNR')),
                ('coupon', models.IntegerField(verbose_name='Coupon')),
                ('date_booking', models.DateTimeField(auto_now_add=True, verbose_name='Date Booking')),
                ('id_flight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPAT.flight')),
                ('id_passenger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'db_table': 'bookings',
                'ordering': ['id_booking'],
            },
        ),
    ]
